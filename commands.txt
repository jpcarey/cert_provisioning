# import / trust root CA for macOS
# -d = Add this certificate to admin certificate store; default is to store it in the userâ€™s keychain.
# -r = Specifies the result you want, in this case you want to use trustRoot (see the security man page for the other options.)
# -k = Specifies the keychain to use
security -v add-trusted-cert -d -r trustRoot -k "/Users/jared/Library/Keychains/login.keychain-db" "certs/C=US;O=Carey Ltd;CN=Carey Ltd CA/certs/C=US;O=Carey Ltd;CN=Carey Ltd CA.cert.pem"

# show default keychain
security -v default-keychain

# Search keychain for certs with term specified after `-c` in the CN
security find-certificate -a -c Carey -Z /Users/jared/Library/Keychains/login.keychain-db

# Print cert details
openssl x509 -noout -text -in "certs/C=US;O=Carey Ltd;CN=Carey Ltd CA/certs/C=US;O=Carey Ltd;CN=Carey Ltd CA.cert.pem"

# Verify chain to cert
openssl verify -CAfile "certs/C=US;O=Carey Ltd;CN=Carey Ltd CA/C=US;O=Carey Ltd;CN=Carey Intermediate 1/C=US;O=Carey Ltd;CN=Carey G2/certs/C=US;O=Carey Ltd;CN=Carey G2-chain.cert.pem" "certs/C=US;O=Carey Ltd;CN=Carey Ltd CA/C=US;O=Carey Ltd;CN=Carey Intermediate 1/C=US;O=Carey Ltd;CN=Carey G2/certs/CN=node2.local.cert.pem"

# java keytool, print keystore cert info (add -v for verbose output)
keytool -list -keystore certs/keytool/truststore.jks -storepass password
